\chapter{总结与展望}
\label{chap:chap05}

\section{全文总结}

随着互联网的高速发展和社交网络的持续增长，文本类型数据的量级呈现出爆炸式的增长，形式也变得越来越复杂和多样。文本类型数据中包含了大量的知识和有用信息，但因为文本类型数据的高度抽象化和形式多样化，自动的、准确的从文本数据中抽取有用信息变得更困难也更重要。人工智能的发展离不开知识的支撑，特别是从感知智能到认知智能的进化，必须具备大量的知识积累，并具有知识推理的能力。散落在互联网上的文本信息中包含了大量的有价值的知识，我们需要一种更准确和高效的方法，从这些海量文本中抽取出有用信息，构建我们的知识图谱，来支撑人工智能的发展。本文主要研究信息抽取领域的一个重要的任务―― 分割式信息抽取，即对一段语义丰富的半结构化文本首先按各属性的不同准确分割文本，然后给予每个文本段正确的标签。对于这种特殊的文本形式，因为其内部属性值之间没有关联，各属性值顺序不固定等根本原因，使得传统的方法的抽取质量不能够满足现实的要求，适应场景也收到限制。因此，本文提出了一种基于深度学习的贪婪式概率标注算法，并实现了一个自动训练和执行抽取的系统，可以更方便的训练模型，更方便的移植到其他数据集，更方便的执行抽取任务， 并且可以更客观的观察我们提出的方法各步骤结果的具体展示。本文的具体研究内容如下：

（1）对深度学习在文本上的应用做了讨论和分析，重点介绍了词向量的训练思路和实用性，列举了深度学习在自然语言处理中若干个领域的解决思路。介绍了分割式信息抽取的概念，说明了分割式信息抽取的现实意义，深入研究了现有方法的解决思路，并对这些方法的优缺点做了详细的分析。

（2）提出了一种基于深度学习的贪婪式概率标注算法。对于传统方法中的匹配函数表现能力不足，应用场景受限等劣势，我们提出了一种适用场景更多，抽取质量更好的方法，即利用深度学习强大的数据表征能力，并结合概率模型来构建我们的模型，非常明显得提升了抽取质量。简要来讲，借助于事先构建的知识库，训练一个卷积神经网络模型（CNN 模型），并执行初始的分割，为了充分使用知识库，另外从知识库中求得了文本段在不同属性中词频先关的信息，用来识别\emph{锚点块}，\emph{锚点块}在我们的模型中的具有非常重要的作用。对于我们的输入文本类型，各属性值虽然语法上独立，但是语义上存在着某种隐藏联系，本文提出的算法就利用了这种结构相关的信息。尽管CNN模型能够直接给出文本段属于各属性的概率，但是这种标注方式只是单独的考虑了这一个文本段，没有综合考虑这个文本段与输入文本中其他文本段的关系，因此这种方式可能不能找到最佳的分割和标注方式，因此本文提出了一种\emph{贪婪式概率标注算法}，可以从全局考虑，找到最佳方案。我们的模型至此就已经可以取得非常好的效果了，但是为了进一步修正错标注和漏标注的情形，本文提出了一种\emph{双向位置与序列模型}，这个模型可以捕获关于某一领域数据集中属性值分布的一些规律，并从前向和后向两个不同的方向来刻画这种信息，本文将充分利用这个重要的信息来进一步强化标注的结果。

（3）对于上面的模型，本文详细介绍了构建卷积神经网络模型的各个细节，并分析了一些超参的选择策略。另外，我们还实现了一个系统，用于更方便地训练模型、执行抽取任务并查看本文提出模型各步骤的中间结果，在文章中详细介绍了这个系统的各个模块内容。


\section{工作展望}

本文对分割式信息抽取任务进行了研究，分析了传统方法的不足之处，提出了基于深度学习的贪婪式概率标注算法，通过与以往方法对比，在几个真实数据集上验证了本文提出算法的效果，实验结果表明，所提出的算法在抽取质量上取得了非常明显的提升，并且在抽取效率上也要优于其他算法。然后，其中仍有可以改进的地方：
（1）



本文对多形态非主属性数据的实体匹配算法进行了研究，提出了基于结构化非主属性数据的实体匹配算法和基于文本类型非主属性数据的实体匹配算法，通过与以往方法对比，在真实数据集上验证了本文提出算法的效果，实验结果表明所提出算法取得了较好的匹配效果，在效率方面也也优于其它算法。然而，其中仍有可以改进的地方：

（1）基于PRTree 的方法在匹配准确性方面还有待提升。在未来的工作中，我们会考虑如何更好地解决错误属性值对匹配的影响。我们还考虑能否将数据纠错和实体匹配相结合，实现二者之间的交互，使二者相互促进。一方面更多匹配的实体有利于纠正更多的错误值，而更多错误值的纠正有利于发现更多匹配的实体。此外，我们还考虑将众包技术（Crowdsourcing）融入到我们的方法之中，将一些机器无法做出的判断交给众包处理，从而进一步提升实体匹配的效果。

（2）基于短语共现的实体匹配算法也有一些需要改善的地方，在使用提取的sub-topic 进行实体匹配时，我们并没有使用所有的子主题，忽略了一些权重较小的子主题，但这种方式存在一些问题。比如有些子主题的权重虽然不高，但对实体匹配的结果会产生很大的影响。例如，在房源数据的CText 中可能存在一些对招租对象的限制，可能只针对单身也可能只租给有家庭的人。如果房源的招租对象不同，即使具有相同或相似的结构化数据和其他非结构化数据，仍有可能不是同一房源。众包作为一种非常重要的技术，能够做一些计算机做不了或者做不好的事情。因此，我们可以考虑使用众包对那些具有较低权重的子主题进行判断，确定子主题是否应该被忽略，如果众包认为不应该忽略，则让众包提供合适的权重分配给该子主题，进而结合新发现的子主题和原来的子主题进行实体匹配。

（3）相似度阈值的设定。本文中提出的算法所使用的相似度阈值是通过大量实验获得的，如果在实际应用中将会影响算法的效果。对此，可以使用一些机器学习的方法或众包的方式去自动调整阈值。通过这些方法可以使算法更好的适应其它数据集，进而获得更好的匹配效果。
