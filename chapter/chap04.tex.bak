\chapter{系统的实现与展示}

\section{Tensorflow介绍}


\section{CNN模型构建细节}
本文提出的基于深度卷积神经网络(CNN)的信息抽取模型，除了事先构建知识库和第一步做初始的文本分割，其他部分的执行都是基于我们构建的CNN分类器模型的输出结果。因此，我们的分类器模型需要能更准确的刻画各属性值的区别，有更高的准确率，但是，我们知道，卷积神经网络(CNN)的优势在于它能充分抽取特征和自由组合特征的能力，但是CNN模型的这个优势，从另一个角度来讲，恰恰也是它的一个劣势――缺乏模型解释性。因此，我们在使用卷积神经网络来构建深度学习模型时，更多时候我们只能把它看做黑盒子。但是，我们还是可以通过加入一些模型训练技巧，探索合适的超参数，改变模型结构来提高模型的表现力。在这一节，将详细介绍我们构建CNN分类模型的一些细节(我们将不再给出实验结果，我们会结合实验结果尝试解释如此选择的原因，从而得到一些经验相关的知识)：
\vspace{-2pt}
\begin{enumerate}[1)]\setlength{\itemsep}{-1pt}

  \item  \textit{CNN模型结构:} 我们使用了文章\cite{kim2014convolutional}中类似的模型结构，在输入层之后，是一个多卷积核的卷积层，然后接一个池化层，最后是一个softmax分类器。卷积层和池化层的层层叠加构成了卷积神经网络模型(有些模型没有池化层)，通常，现实中常用的基于卷积神经网络的深度学习模型都会有很多层的卷积层加池化层，特别是在做图像和语音的任务中。因此，我们在构建自己的模型时，尝试增加卷积层和池化层的数量，但是通过实验我们发现，这并没有提升模型的表现力，反而有略微的相反作用，并且更重要的一点是，增加了层数模型训练时间会有明显的增加。模型层数多就代表模型需要学习的参数更多，当我们要做图像识别时，模型的输入是图像的像素矩阵，这个矩阵的特征密度非常高，因此我们需要一层一层的，从低阶到高阶的，从部分到整体的对输入矩阵进行处理，并在每一层进行特征的抽象和组合。图像中特征的刻画是非常复杂的，比如从低阶的边角特征组合成不同动物是需要在非常高阶上组合的，因此，增加模型的层数，才能够用更多的参数来刻画这种高阶的特征。在我们的应用场景中，首先因为我们的模型输入矩阵是训练好的word2vec，虽然是一种压缩的高密度文本表征方式，但是这种‘高密度’也是相对于one-hot编码而言，相比较图像的像素矩阵，所包含的特征密度应该是差的很远，因此我们不需要这么深的网络。另外，我们训练CNN模型的输入是来自于知识库中的属性值，它的文本长度相对较短，即使最终将所有输入都归一化之后，也不会是很大的输入矩阵，这种输入矩阵的大小也不需要我们使用过深的网络。网络越复杂过拟合的可能性越大。因此，这种单层卷积加单层池化的结构是最适合我们的应用场景的。
      
      
  \item \textit{CNN模型通道:} CNN网络中的不同\emph{通道}可以解释为‘看’输入矩阵的不同角度，比如，在做图像识别时，我们有红，绿，蓝三个通道，模型在三个通道上同时运行，然后以某种方式组合起来。在我们的模型中，也采用了类似的模式。我们使用静态通道和动态通道，静态通道是指，对于我们的输入矩阵――word2vec，在训练我们的模型时此输入矩阵保持不变，而模型的其他参数随着模型训练而改变。动态通道是指，不仅模型的其他参数随着训练的过程而改变，输入的word2vec也会在训练过程中进行微调。具体来讲，在训练时，同时给模型两组训练数据，输入的都是词向量，然后在每一组训练数据上，每一组词向量就看做是一个通道，然后每个卷积核会同时在两组训练数据上执行，但是，梯度的反向传播只在其中一个通道上进行。这样就可以保持一个通道上输入词向量不变，也就是静态通道，而微调另一个通道的输入词向量，也就是动态通道。而静态通道和动态通道的实现在Tensorflow中也是比较简单，只需要在 $Variable$ 类中设置$trainable=True/False$，然后相应的改变后面步骤中张量的维度就行了。这种策略在文章\cite{kim2014convolutional, zhang2015sensitivity} 中有详细的讨论。
    

  \item \textit{卷积核数量和大小:} 为了充分的抽取特征，在卷基层中，我们使用了不同大小的卷积核，并且每种大小的卷积核中设置一定数量的卷积核。
  
  
  \item \textit{卷积方式:} 
  
  
  \item \textit{激活函数:} 
  
  
  \item \textit{池化方式:} 
  
  
  \item \textit{模型正则化:} 
  

\end{enumerate}


\section{系统架构及展示}




\section{本章小结}


